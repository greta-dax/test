
Récupérer l'ISO Debian netinst AMD64

Installer Virtualbox (téléchargeable depuis le site d'Oracle)

Créer une machine virtuelle
  - 20Go disque VDI dynamiquement alloué
  - 2Go RAM
  - 2vCPU
  - réseau NAT
  - iso Debian sur lecteur CD

Démarrer la machine virtuelle et faire l'installation Debian
  - Nom : comme vous voulez
  - Configuration réseau automatique
  - Partitionnement : automatique tout dans /
  - Tout par défaut
  - Utilisateur : ce que vous voulez
  - SSH Server

Se connecter en root

Installer, configurer et tester sudo

  su -
  apt-get install sudo
  gpasswd -a alahouze sudo


La suite en root

  exit
  sudo -i

Configurer ssh

  vim /etc/ssh/sshd_config

  addgroup --system ssh
  gpasswd -a alahouze ssh

Configurer le second réseau

Générer une clé SSH

  ssh-keygen -t rsa -b 4096

Copier la clé sur la VM

  ssh-copy-id alahouze@192.168.56.102

Connexion en ssh

  ssh alahouze@192.168.56.102

Installer nodejs, nodejs-legacy, npm

  sudo apt-get install curl
  curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -
  sudo apt-get install nodejs

Installer mongodb, nginx, git

  sudo apt-get install mongodb git nginx-full

Faire en sorte qu'on puisse se connecter en www-data par clé SSH

  sudo chown www-data ~www-data
  sudo -u www-data mkdir ~www-data/.ssh
  sudo -u www-data chmod 700 ~www-data/.ssh
  sudo cp /home/alahouze/.ssh/authorized_keys ~www-data/.ssh
  sudo chown www-data:www-data ~www-data/.ssh/authorized_keys
  sudo gpasswd -a www-data ssh
  sudo chsh www-data -s /bin/bash

Pour la suite se connecter en www-data par ssh

  ssh www-data@192.168.56.102

Déployer l'application NodeJs (git clone --bare; hook post-receive, checkout
dans répertoire cible final)

  git clone --bare https://github.com/GretaLahitte/appFormation_Mongo app.git
  
  nano app.git/hooks/post-receive

#!/bin/sh
PROJECT_ROOT=/var/www/app
git --work-tree=$PROJECT_ROOT --git-dir=$PROJECT_ROOT.git checkout -f

  chmod +x app.git/hooks/post-receive
  mkdir app
  ./app.git/hooks/post-receive
  ls app

Installer les dépendances

  cd app
  npm install

Installer pm2

  npm install pm2

Démarrer l'application avec pm2

  ./node_modules/.bin/pm2 start bin/www

Vérifier qu'elle est disponible

   http://192.168.56.102:3000

La suite en root

Configurer le vhost Nginx

  nano /etc/nginx/sites-available/default

location / {
    proxy_pass http://127.0.0.1:3000;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
}


Vérifier et recharger la configuration Nginx

Accéder à l'application via le vhost Nginx

Installer un gestionnaire de parefeu (shorewall)

Bloquer l'accès à tous les services sauf HTTP et SSH

Installation fail2ban

